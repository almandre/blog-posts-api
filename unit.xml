<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="0.5000" tests="13" failures="0">
  <testsuite name="Root Suite" timestamp="2021-03-03T22:17:33" tests="0" time="0.0000" failures="0">
  </testsuite>
  <testsuite name="blog_posts_api_medium" timestamp="2021-03-03T22:17:33" tests="13" file="C:\Users\andre.a.almeida\Documents\github\blog-posts-api\test\index.spec.js" time="0.5000" failures="0">
    <testcase name="blog_posts_api_medium should create a published post" time="0.1750" classname="should create a published post">
    </testcase>
    <testcase name="blog_posts_api_medium should create an unpublished post" time="0.0100" classname="should create an unpublished post">
    </testcase>
    <testcase name="blog_posts_api_medium should fetch all the posts" time="0.0420" classname="should fetch all the posts">
    </testcase>
    <testcase name="blog_posts_api_medium should fetch all the posts if the isPublished filter value does not exist" time="0.0340" classname="should fetch all the posts if the isPublished filter value does not exist">
    </testcase>
    <testcase name="blog_posts_api_medium should fetch all posts for an author" time="0.0310" classname="should fetch all posts for an author">
    </testcase>
    <testcase name="blog_posts_api_medium should fetch no posts if author filter value does not exist" time="0.0570" classname="should fetch no posts if author filter value does not exist">
    </testcase>
    <testcase name="blog_posts_api_medium should fetch all published posts for an author" time="0.0440" classname="should fetch all published posts for an author">
    </testcase>
    <testcase name="blog_posts_api_medium should fetch all unpublished posts for an author" time="0.0460" classname="should fetch all unpublished posts for an author">
    </testcase>
    <testcase name="blog_posts_api_medium should fetch a single post" time="0.0160" classname="should fetch a single post">
    </testcase>
    <testcase name="blog_posts_api_medium should get 404 if the post ID does not exist" time="0.0070" classname="should get 404 if the post ID does not exist">
    </testcase>
    <testcase name="blog_posts_api_medium should get 405 for a put request to /posts/:id" time="0.0140" classname="should get 405 for a put request to /posts/:id">
    </testcase>
    <testcase name="blog_posts_api_medium should get 405 for a patch request to /posts/:id" time="0.0150" classname="should get 405 for a patch request to /posts/:id">
    </testcase>
    <testcase name="blog_posts_api_medium should get 405 for a delete request to /posts/:id" time="0.0090" classname="should get 405 for a delete request to /posts/:id">
    </testcase>
  </testsuite>
</testsuites>